#include"pch.h"


//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
#pragma comment(linker, "/EXPORT:s7H_start_cpu=_AheadLib_s7H_start_cpu,@2")
#pragma comment(linker, "/EXPORT:s7H_stop_cpu=_AheadLib_s7H_stop_cpu,@3")
#pragma comment(linker, "/EXPORT:s7H_switch_master_reserve=_AheadLib_s7H_switch_master_reserve,@4")
#pragma comment(linker, "/EXPORT:s7_clear_password=_AheadLib_s7_clear_password,@5")
#pragma comment(linker, "/EXPORT:s7_conv_errno=_AheadLib_s7_conv_errno,@6")
#pragma comment(linker, "/EXPORT:s7_conv_ret=_AheadLib_s7_conv_ret,@7")
#pragma comment(linker, "/EXPORT:s7_event=_AheadLib_s7_event,@8")
#pragma comment(linker, "/EXPORT:s7_event_cancel=_AheadLib_s7_event_cancel,@9")
#pragma comment(linker, "/EXPORT:s7_event_info=_AheadLib_s7_event_info,@10")
#pragma comment(linker, "/EXPORT:s7_get_password=_AheadLib_s7_get_password,@11")
#pragma comment(linker, "/EXPORT:s7_set_password=_AheadLib_s7_set_password,@12")
#pragma comment(linker, "/EXPORT:s7ag_besy_update=_AheadLib_s7ag_besy_update,@13")
#pragma comment(linker, "/EXPORT:s7ag_brcv_create=_AheadLib_s7ag_brcv_create,@14")
#pragma comment(linker, "/EXPORT:s7ag_brcv_delete=_AheadLib_s7ag_brcv_delete,@15")
#pragma comment(linker, "/EXPORT:s7ag_bsnd=_AheadLib_s7ag_bsnd,@16")
#pragma comment(linker, "/EXPORT:s7ag_bub_cycl_read_create=_AheadLib_s7ag_bub_cycl_read_create,@17")
#pragma comment(linker, "/EXPORT:s7ag_bub_cycl_read_delete=_AheadLib_s7ag_bub_cycl_read_delete,@18")
#pragma comment(linker, "/EXPORT:s7ag_bub_cycl_read_start=_AheadLib_s7ag_bub_cycl_read_start,@19")
#pragma comment(linker, "/EXPORT:s7ag_bub_cycl_read_stop=_AheadLib_s7ag_bub_cycl_read_stop,@20")
#pragma comment(linker, "/EXPORT:s7ag_bub_read_var=_AheadLib_s7ag_bub_read_var,@21")
#pragma comment(linker, "/EXPORT:s7ag_bub_read_var_seg=_AheadLib_s7ag_bub_read_var_seg,@22")
#pragma comment(linker, "/EXPORT:s7ag_bub_write_var=_AheadLib_s7ag_bub_write_var,@23")
#pragma comment(linker, "/EXPORT:s7ag_bub_write_var_seg=_AheadLib_s7ag_bub_write_var_seg,@24")
#pragma comment(linker, "/EXPORT:s7ag_compress=_AheadLib_s7ag_compress,@25")
#pragma comment(linker, "/EXPORT:s7ag_link_in=_AheadLib_s7ag_link_in,@26")
#pragma comment(linker, "/EXPORT:s7ag_mem_mode=_AheadLib_s7ag_mem_mode,@27")
#pragma comment(linker, "/EXPORT:s7ag_msg_mode=_AheadLib_s7ag_msg_mode,@28")
#pragma comment(linker, "/EXPORT:s7ag_password=_AheadLib_s7ag_password,@29")
#pragma comment(linker, "/EXPORT:s7ag_pmc_msg_ack=_AheadLib_s7ag_pmc_msg_ack,@30")
#pragma comment(linker, "/EXPORT:s7ag_pmc_msg_mode=_AheadLib_s7ag_pmc_msg_mode,@31")
#pragma comment(linker, "/EXPORT:s7ag_pmc_msg_on_off=_AheadLib_s7ag_pmc_msg_on_off,@32")
#pragma comment(linker, "/EXPORT:s7ag_pmc_update=_AheadLib_s7ag_pmc_update,@33")
#pragma comment(linker, "/EXPORT:s7ag_read_szl=_AheadLib_s7ag_read_szl,@34")
#pragma comment(linker, "/EXPORT:s7ag_read_time=_AheadLib_s7ag_read_time,@35")
#pragma comment(linker, "/EXPORT:s7ag_read_time_ex=_AheadLib_s7ag_read_time_ex,@36")
#pragma comment(linker, "/EXPORT:s7ag_resume=_AheadLib_s7ag_resume,@37")
#pragma comment(linker, "/EXPORT:s7ag_start=_AheadLib_s7ag_start,@38")
#pragma comment(linker, "/EXPORT:s7ag_stop=_AheadLib_s7ag_stop,@39")
#pragma comment(linker, "/EXPORT:s7ag_test=_AheadLib_s7ag_test,@40")
#pragma comment(linker, "/EXPORT:s7ag_test_delete=_AheadLib_s7ag_test_delete,@41")
#pragma comment(linker, "/EXPORT:s7ag_write_time=_AheadLib_s7ag_write_time,@42")
#pragma comment(linker, "/EXPORT:s7ag_write_time_ex=_AheadLib_s7ag_write_time_ex,@43")
#pragma comment(linker, "/EXPORT:s7blk_delete=_AheadLib_s7blk_delete,@44")
#pragma comment(linker, "/EXPORT:s7blk_findfirst=_AheadLib_s7blk_findfirst,@45")
#pragma comment(linker, "/EXPORT:s7blk_findnext=_AheadLib_s7blk_findnext,@46")
#pragma comment(linker, "/EXPORT:s7blk_read=_AheadLib_s7blk_read,@47")
#pragma comment(linker, "/EXPORT:s7blk_write=_AheadLib_s7blk_write,@48")
#pragma comment(linker, "/EXPORT:s7db_close=_AheadLib_s7db_close,@49")
#pragma comment(linker, "/EXPORT:s7db_copy=_AheadLib_s7db_copy,@50")
#pragma comment(linker, "/EXPORT:s7db_create=_AheadLib_s7db_create,@51")
#pragma comment(linker, "/EXPORT:s7db_delete=_AheadLib_s7db_delete,@52")
#pragma comment(linker, "/EXPORT:s7db_open=_AheadLib_s7db_open,@53")
#pragma comment(linker, "/EXPORT:s7dos_release=_AheadLib_s7dos_release,@54")
#pragma comment(linker, "/EXPORT:s7dos_trace=_AheadLib_s7dos_trace,@55")
#pragma comment(linker, "/EXPORT:s7dos_version=_AheadLib_s7dos_version,@56")
#pragma comment(linker, "/EXPORT:s7dp_set_slave_address=_AheadLib_s7dp_set_slave_address,@57")
#pragma comment(linker, "/EXPORT:s7dp_slave_diagnose=_AheadLib_s7dp_slave_diagnose,@58")
#pragma comment(linker, "/EXPORT:s7dpt_read=_AheadLib_s7dpt_read,@59")
#pragma comment(linker, "/EXPORT:s7dpt_write=_AheadLib_s7dpt_write,@60")
#pragma comment(linker, "/EXPORT:s7epr_image_read=_AheadLib_s7epr_image_read,@61")
#pragma comment(linker, "/EXPORT:s7epr_image_write=_AheadLib_s7epr_image_write,@62")
#pragma comment(linker, "/EXPORT:s7epr_kb_memory=_AheadLib_s7epr_kb_memory,@63")
#pragma comment(linker, "/EXPORT:s7epr_kennbit=_AheadLib_s7epr_kennbit,@64")
#pragma comment(linker, "/EXPORT:s7epr_physical_rd=_AheadLib_s7epr_physical_rd,@65")
#pragma comment(linker, "/EXPORT:s7epr_physical_wr=_AheadLib_s7epr_physical_wr,@66")
#pragma comment(linker, "/EXPORT:s7epr_property=_AheadLib_s7epr_property,@67")
#pragma comment(linker, "/EXPORT:s7epr_service=_AheadLib_s7epr_service,@68")
#pragma comment(linker, "/EXPORT:s7ie_CheckIsIPAddressFree=_AheadLib_s7ie_CheckIsIPAddressFree,@69")
#pragma comment(linker, "/EXPORT:s7ie_CloseServer=_AheadLib_s7ie_CloseServer,@70")
#pragma comment(linker, "/EXPORT:s7ie_DeletePGIPAddress=_AheadLib_s7ie_DeletePGIPAddress,@71")
#pragma comment(linker, "/EXPORT:s7ie_GetAdapterInfo=_AheadLib_s7ie_GetAdapterInfo,@72")
#pragma comment(linker, "/EXPORT:s7ie_GetDataset=_AheadLib_s7ie_GetDataset,@73")
#pragma comment(linker, "/EXPORT:s7ie_GetIeParam=_AheadLib_s7ie_GetIeParam,@74")
#pragma comment(linker, "/EXPORT:s7ie_GetMacAddress=_AheadLib_s7ie_GetMacAddress,@75")
#pragma comment(linker, "/EXPORT:s7ie_GetPGIPAddressList=_AheadLib_s7ie_GetPGIPAddressList,@76")
#pragma comment(linker, "/EXPORT:s7ie_Identify=_AheadLib_s7ie_Identify,@77")
#pragma comment(linker, "/EXPORT:s7ie_IdentifyName=_AheadLib_s7ie_IdentifyName,@78")
#pragma comment(linker, "/EXPORT:s7ie_Identify_Cancel=_AheadLib_s7ie_Identify_Cancel,@79")
#pragma comment(linker, "/EXPORT:s7ie_IsReachable=_AheadLib_s7ie_IsReachable,@80")
#pragma comment(linker, "/EXPORT:s7ie_SearchAndSetPGIPAddress=_AheadLib_s7ie_SearchAndSetPGIPAddress,@81")
#pragma comment(linker, "/EXPORT:s7ie_SearchForFreeIPAddress=_AheadLib_s7ie_SearchForFreeIPAddress,@82")
#pragma comment(linker, "/EXPORT:s7ie_SetDataset=_AheadLib_s7ie_SetDataset,@83")
#pragma comment(linker, "/EXPORT:s7ie_SetIeParam=_AheadLib_s7ie_SetIeParam,@84")
#pragma comment(linker, "/EXPORT:s7ie_SetNameOfStation=_AheadLib_s7ie_SetNameOfStation,@85")
#pragma comment(linker, "/EXPORT:s7ie_SetNetworkParam=_AheadLib_s7ie_SetNetworkParam,@86")
#pragma comment(linker, "/EXPORT:s7ie_ShowLocation=_AheadLib_s7ie_ShowLocation,@87")
#pragma comment(linker, "/EXPORT:s7l7_dataexchange2=_AheadLib_s7l7_dataexchange2,@88")
#pragma comment(linker, "/EXPORT:s7l7_download_domain=_AheadLib_s7l7_download_domain,@89")
#pragma comment(linker, "/EXPORT:s7l7_pi_service=_AheadLib_s7l7_pi_service,@90")
#pragma comment(linker, "/EXPORT:s7l7_pi_service_ex=_AheadLib_s7l7_pi_service_ex,@91")
#pragma comment(linker, "/EXPORT:s7l7_upload_domain=_AheadLib_s7l7_upload_domain,@92")
#pragma comment(linker, "/EXPORT:s7net_get_baudrate=_AheadLib_s7net_get_baudrate,@93")
#pragma comment(linker, "/EXPORT:s7net_get_bus_params=_AheadLib_s7net_get_bus_params,@94")
#pragma comment(linker, "/EXPORT:s7net_get_diagnose=_AheadLib_s7net_get_diagnose,@95")
#pragma comment(linker, "/EXPORT:s7net_get_direct_plc=_AheadLib_s7net_get_direct_plc,@96")
#pragma comment(linker, "/EXPORT:s7net_get_life_list=_AheadLib_s7net_get_life_list,@97")
#pragma comment(linker, "/EXPORT:s7net_get_report=_AheadLib_s7net_get_report,@98")
#pragma comment(linker, "/EXPORT:s7net_start_diagnose=_AheadLib_s7net_start_diagnose,@99")
#pragma comment(linker, "/EXPORT:s7net_stop_diagnose=_AheadLib_s7net_stop_diagnose,@100")
#pragma comment(linker, "/EXPORT:s7pnio_check_is_IPAddress_free=_AheadLib_s7pnio_check_is_IPAddress_free,@101")
#pragma comment(linker, "/EXPORT:s7pnio_close_cd7=_AheadLib_s7pnio_close_cd7,@102")
#pragma comment(linker, "/EXPORT:s7pnio_epmap_end=_AheadLib_s7pnio_epmap_end,@103")
#pragma comment(linker, "/EXPORT:s7pnio_epmap_first=_AheadLib_s7pnio_epmap_first,@104")
#pragma comment(linker, "/EXPORT:s7pnio_epmap_next=_AheadLib_s7pnio_epmap_next,@105")
#pragma comment(linker, "/EXPORT:s7pnio_open_cd7=_AheadLib_s7pnio_open_cd7,@106")
#pragma comment(linker, "/EXPORT:s7pnio_read_record=_AheadLib_s7pnio_read_record,@107")
#pragma comment(linker, "/EXPORT:s7pnio_read_record_targetaruuid=_AheadLib_s7pnio_read_record_targetaruuid,@108")
#pragma comment(linker, "/EXPORT:s7pnio_write_record=_AheadLib_s7pnio_write_record,@109")
#pragma comment(linker, "/EXPORT:s7prog_blk_laden=_AheadLib_s7prog_blk_laden,@110")
#pragma comment(linker, "/EXPORT:s7prog_laden_ende=_AheadLib_s7prog_laden_ende,@111")
#pragma comment(linker, "/EXPORT:s7prog_laden_init=_AheadLib_s7prog_laden_init,@112")
#pragma comment(linker, "/EXPORT:s7sim_get_life_list=_AheadLib_s7sim_get_life_list,@113")
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 宏定义
#define EXTERNC extern "C"
#define NAKED __declspec(naked)
#define EXPORT __declspec(dllexport)

#define ALCPP EXPORT NAKED
#define ALSTD EXTERNC EXPORT NAKED void __stdcall
#define ALCFAST EXTERNC EXPORT NAKED void __fastcall
#define ALCDECL EXTERNC NAKED void __cdecl
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// HOOK 命名空间
namespace HOOK
{
	HHOOK m_hHook;

	LRESULT CALLBACK HookProc(INT iCode, WPARAM wParam, LPARAM lParam)
	{
		if (iCode > 0)
		{
			;
		}

		return CallNextHookEx(m_hHook, iCode, wParam, lParam);
	}

	// inline 只适合 函数体 代码简单的 函数 使用，可以 解决一些频繁调用的 小函数 大量消耗 栈空间（栈内存）的问题
	inline BOOL WINAPI Hook(INT iHookId = WH_CALLWNDPROC) // WH_CALLWNDPROC：监视 (SendMessage) 发送给 窗口的消息
	{
		m_hHook = SetWindowsHookEx(iHookId, HookProc, NULL, GetCurrentThreadId());
		return m_hHook != NULL;
	}

	inline VOID WINAPI UnHook()
	{
		if (m_hHook)
		{
			UnhookWindowsHookEx(m_hHook);
			m_hHook = NULL;
		}
	}
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// AheadLib 命名空间
namespace AheadLib
{
	HMODULE m_hModule = NULL;	// 原始模块句柄


	// 加载原始模块
	inline BOOL WINAPI Load()
	{
		TCHAR tzPath[MAX_PATH];
		TCHAR tzTemp[MAX_PATH * 2];

		lstrcpy(tzPath, TEXT("c:\\windows\\system32\\s7otbxdx.dll"));
		m_hModule = LoadLibrary(tzPath);
		if (m_hModule == NULL)
		{
			wsprintf(tzTemp, TEXT("无法加载 %s，程序无法正常运行。"), tzPath);
			MessageBox(NULL, tzTemp, TEXT("AheadLib"), MB_OK);
		}

		return (m_hModule != NULL);
	}

	// 释放原始模块
	inline VOID WINAPI Free()
	{
		if (m_hModule)
		{
			FreeLibrary(m_hModule);
			m_hModule = NULL;
		}
	}

	// 获取原始函数地址
	FARPROC WINAPI GetAddress(PCSTR pszProcName)
	{
		FARPROC fpAddress;
		CHAR szProcName[16];
		TCHAR tzTemp[MAX_PATH];

		fpAddress = GetProcAddress(m_hModule, pszProcName);

		if (fpAddress == NULL)
		{
			if (HIWORD(pszProcName) == 0)
			{
				wsprintfA(szProcName, "%d", pszProcName);
				pszProcName = szProcName;
			}

			wsprintf(tzTemp, TEXT("无法找到函数 %hs，程序无法正常运行。"), pszProcName);
			MessageBox(NULL, tzTemp, TEXT("AheadLib"), 0);
			ExitProcess(-2);
		}

		return fpAddress;
	}
}
using namespace AheadLib;
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7H_start_cpu(void)
{
	// 调用原始函数
	GetAddress("s7H_start_cpu");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7H_stop_cpu(void)
{
	// 调用原始函数
	GetAddress("s7H_stop_cpu");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7H_switch_master_reserve(void)
{
	// 调用原始函数
	GetAddress("s7H_switch_master_reserve");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7_clear_password(void)
{
	// 调用原始函数
	GetAddress("s7_clear_password");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7_conv_errno(void)
{
	// 调用原始函数
	GetAddress("s7_conv_errno");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7_conv_ret(void)
{
	// 调用原始函数
	GetAddress("s7_conv_ret");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7_event(void)
{
	// 调用原始函数
	GetAddress("s7_event");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7_event_cancel(void)
{
	// 调用原始函数
	GetAddress("s7_event_cancel");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7_event_info(void)
{
	// 调用原始函数
	GetAddress("s7_event_info");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7_get_password(void)
{
	// 调用原始函数
	GetAddress("s7_get_password");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7_set_password(void)
{
	// 调用原始函数
	GetAddress("s7_set_password");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_besy_update(void)
{
	// 调用原始函数
	GetAddress("s7ag_besy_update");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_brcv_create(void)
{
	// 调用原始函数
	GetAddress("s7ag_brcv_create");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_brcv_delete(void)
{
	// 调用原始函数
	GetAddress("s7ag_brcv_delete");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_bsnd(void)
{
	// 调用原始函数
	GetAddress("s7ag_bsnd");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_bub_cycl_read_create(void)
{
	// 调用原始函数
	GetAddress("s7ag_bub_cycl_read_create");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_bub_cycl_read_delete(void)
{
	// 调用原始函数
	GetAddress("s7ag_bub_cycl_read_delete");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_bub_cycl_read_start(void)
{
	// 调用原始函数
	GetAddress("s7ag_bub_cycl_read_start");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_bub_cycl_read_stop(void)
{
	// 调用原始函数
	GetAddress("s7ag_bub_cycl_read_stop");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_bub_read_var(void)
{
	// 调用原始函数
	GetAddress("s7ag_bub_read_var");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_bub_read_var_seg(void)
{
	// 调用原始函数
	GetAddress("s7ag_bub_read_var_seg");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_bub_write_var(void)
{
	// 调用原始函数
	GetAddress("s7ag_bub_write_var");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_bub_write_var_seg(void)
{
	// 调用原始函数
	GetAddress("s7ag_bub_write_var_seg");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_compress(void)
{
	// 调用原始函数
	GetAddress("s7ag_compress");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_link_in(void)
{
	// 调用原始函数
	GetAddress("s7ag_link_in");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_mem_mode(void)
{
	// 调用原始函数
	GetAddress("s7ag_mem_mode");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_msg_mode(void)
{
	// 调用原始函数
	GetAddress("s7ag_msg_mode");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_password(void)
{
	// 调用原始函数
	GetAddress("s7ag_password");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_pmc_msg_ack(void)
{
	// 调用原始函数
	GetAddress("s7ag_pmc_msg_ack");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_pmc_msg_mode(void)
{
	// 调用原始函数
	GetAddress("s7ag_pmc_msg_mode");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_pmc_msg_on_off(void)
{
	// 调用原始函数
	GetAddress("s7ag_pmc_msg_on_off");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_pmc_update(void)
{
	// 调用原始函数
	GetAddress("s7ag_pmc_update");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_read_szl(void)
{
	// 调用原始函数
	GetAddress("s7ag_read_szl");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_read_time(void)
{
	// 调用原始函数
	GetAddress("s7ag_read_time");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_read_time_ex(void)
{
	// 调用原始函数
	GetAddress("s7ag_read_time_ex");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_resume(void)
{
	// 调用原始函数
	GetAddress("s7ag_resume");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_start(void)
{
	// 调用原始函数
	GetAddress("s7ag_start");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_stop(void)
{
	// 调用原始函数
	GetAddress("s7ag_stop");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_test(void)
{
	// 调用原始函数
	GetAddress("s7ag_test");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_test_delete(void)
{
	// 调用原始函数
	GetAddress("s7ag_test_delete");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_write_time(void)
{
	// 调用原始函数
	GetAddress("s7ag_write_time");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ag_write_time_ex(void)
{
	// 调用原始函数
	GetAddress("s7ag_write_time_ex");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7blk_delete(void)
{
	// 调用原始函数
	GetAddress("s7blk_delete");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7blk_findfirst(void)
{
	// 调用原始函数
	GetAddress("s7blk_findfirst");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7blk_findnext(void)
{
	// 调用原始函数
	GetAddress("s7blk_findnext");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7blk_read(void)
{
	// 调用原始函数
	GetAddress("s7blk_read");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7blk_write(void)
{
	// 调用原始函数
	GetAddress("s7blk_write");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7db_close(void)
{
	// 调用原始函数
	GetAddress("s7db_close");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7db_copy(void)
{
	// 调用原始函数
	GetAddress("s7db_copy");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7db_create(void)
{
	// 调用原始函数
	GetAddress("s7db_create");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7db_delete(void)
{
	// 调用原始函数
	GetAddress("s7db_delete");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7db_open(void)
{
	// 调用原始函数
	GetAddress("s7db_open");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7dos_release(void)
{
	// 调用原始函数
	GetAddress("s7dos_release");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7dos_trace(void)
{
	// 调用原始函数
	GetAddress("s7dos_trace");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7dos_version(void)
{
	// 调用原始函数
	GetAddress("s7dos_version");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7dp_set_slave_address(void)
{
	// 调用原始函数
	GetAddress("s7dp_set_slave_address");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7dp_slave_diagnose(void)
{
	// 调用原始函数
	GetAddress("s7dp_slave_diagnose");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7dpt_read(void)
{
	// 调用原始函数
	GetAddress("s7dpt_read");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7dpt_write(void)
{
	// 调用原始函数
	GetAddress("s7dpt_write");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7epr_image_read(void)
{
	// 调用原始函数
	GetAddress("s7epr_image_read");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7epr_image_write(void)
{
	// 调用原始函数
	GetAddress("s7epr_image_write");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7epr_kb_memory(void)
{
	// 调用原始函数
	GetAddress("s7epr_kb_memory");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7epr_kennbit(void)
{
	// 调用原始函数
	GetAddress("s7epr_kennbit");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7epr_physical_rd(void)
{
	// 调用原始函数
	GetAddress("s7epr_physical_rd");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7epr_physical_wr(void)
{
	// 调用原始函数
	GetAddress("s7epr_physical_wr");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7epr_property(void)
{
	// 调用原始函数
	GetAddress("s7epr_property");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7epr_service(void)
{
	// 调用原始函数
	GetAddress("s7epr_service");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ie_CheckIsIPAddressFree(void)
{
	// 调用原始函数
	GetAddress("s7ie_CheckIsIPAddressFree");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ie_CloseServer(void)
{
	// 调用原始函数
	GetAddress("s7ie_CloseServer");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ie_DeletePGIPAddress(void)
{
	// 调用原始函数
	GetAddress("s7ie_DeletePGIPAddress");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ie_GetAdapterInfo(void)
{
	// 调用原始函数
	GetAddress("s7ie_GetAdapterInfo");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ie_GetDataset(void)
{
	// 调用原始函数
	GetAddress("s7ie_GetDataset");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ie_GetIeParam(void)
{
	// 调用原始函数
	GetAddress("s7ie_GetIeParam");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ie_GetMacAddress(void)
{
	// 调用原始函数
	GetAddress("s7ie_GetMacAddress");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ie_GetPGIPAddressList(void)
{
	// 调用原始函数
	GetAddress("s7ie_GetPGIPAddressList");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ie_Identify(void)
{
	// 调用原始函数
	GetAddress("s7ie_Identify");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ie_IdentifyName(void)
{
	// 调用原始函数
	GetAddress("s7ie_IdentifyName");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ie_Identify_Cancel(void)
{
	// 调用原始函数
	GetAddress("s7ie_Identify_Cancel");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ie_IsReachable(void)
{
	// 调用原始函数
	GetAddress("s7ie_IsReachable");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ie_SearchAndSetPGIPAddress(void)
{
	// 调用原始函数
	GetAddress("s7ie_SearchAndSetPGIPAddress");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ie_SearchForFreeIPAddress(void)
{
	// 调用原始函数
	GetAddress("s7ie_SearchForFreeIPAddress");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ie_SetDataset(void)
{
	// 调用原始函数
	GetAddress("s7ie_SetDataset");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ie_SetIeParam(void)
{
	// 调用原始函数
	GetAddress("s7ie_SetIeParam");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ie_SetNameOfStation(void)
{
	// 调用原始函数
	GetAddress("s7ie_SetNameOfStation");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ie_SetNetworkParam(void)
{
	// 调用原始函数
	GetAddress("s7ie_SetNetworkParam");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7ie_ShowLocation(void)
{
	// 调用原始函数
	GetAddress("s7ie_ShowLocation");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7l7_dataexchange2(void)
{
	// 调用原始函数
	GetAddress("s7l7_dataexchange2");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7l7_download_domain(void)
{
	// 调用原始函数
	GetAddress("s7l7_download_domain");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7l7_pi_service(void)
{
	// 调用原始函数
	GetAddress("s7l7_pi_service");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7l7_pi_service_ex(void)
{
	// 调用原始函数
	GetAddress("s7l7_pi_service_ex");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7l7_upload_domain(void)
{
	// 调用原始函数
	GetAddress("s7l7_upload_domain");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7net_get_baudrate(void)
{
	// 调用原始函数
	GetAddress("s7net_get_baudrate");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7net_get_bus_params(void)
{
	// 调用原始函数
	GetAddress("s7net_get_bus_params");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7net_get_diagnose(void)
{
	// 调用原始函数
	GetAddress("s7net_get_diagnose");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7net_get_direct_plc(void)
{
	// 调用原始函数
	GetAddress("s7net_get_direct_plc");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7net_get_life_list(void)
{
	// 调用原始函数
	GetAddress("s7net_get_life_list");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7net_get_report(void)
{
	// 调用原始函数
	GetAddress("s7net_get_report");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7net_start_diagnose(void)
{
	// 调用原始函数
	GetAddress("s7net_start_diagnose");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7net_stop_diagnose(void)
{
	// 调用原始函数
	GetAddress("s7net_stop_diagnose");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7pnio_check_is_IPAddress_free(void)
{
	// 调用原始函数
	GetAddress("s7pnio_check_is_IPAddress_free");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7pnio_close_cd7(void)
{
	// 调用原始函数
	GetAddress("s7pnio_close_cd7");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7pnio_epmap_end(void)
{
	// 调用原始函数
	GetAddress("s7pnio_epmap_end");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7pnio_epmap_first(void)
{
	// 调用原始函数
	GetAddress("s7pnio_epmap_first");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7pnio_epmap_next(void)
{
	// 调用原始函数
	GetAddress("s7pnio_epmap_next");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7pnio_open_cd7(void)
{
	// 调用原始函数
	GetAddress("s7pnio_open_cd7");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7pnio_read_record(void)
{
	// 调用原始函数
	GetAddress("s7pnio_read_record");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7pnio_read_record_targetaruuid(void)
{
	// 调用原始函数
	GetAddress("s7pnio_read_record_targetaruuid");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7pnio_write_record(void)
{
	// 调用原始函数
	GetAddress("s7pnio_write_record");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7prog_blk_laden(void)
{
	// 调用原始函数
	GetAddress("s7prog_blk_laden");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7prog_laden_ende(void)
{
	// 调用原始函数
	GetAddress("s7prog_laden_ende");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7prog_laden_init(void)
{
	// 调用原始函数
	GetAddress("s7prog_laden_init");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_s7sim_get_life_list(void)
{
	// 调用原始函数
	GetAddress("s7sim_get_life_list");

	__asm JMP EAX;
}
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// 入口函数

BOOL APIENTRY DllMain(HMODULE hModule,
	DWORD  ul_reason_for_call,
	LPVOID lpReserved
)
{
	switch (ul_reason_for_call)
	{
	case DLL_PROCESS_ATTACH:
		DisableThreadLibraryCalls(hModule);
		HOOK::Hook();

		BOOL bRet;

		if (bRet = Load())
		{
			MessageBox(0, L"dll 劫持成功", L"AheadLib", 0);
		}

		return bRet;

	case DLL_THREAD_ATTACH:
	case DLL_THREAD_DETACH:

	case DLL_PROCESS_DETACH:
		Free();
		HOOK::UnHook();
		break;
	}
	return TRUE;
}
//////////////////////////////////////////////////////////////////////////////////////
